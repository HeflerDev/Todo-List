import forms from '../views/forms';
import todoTab from '../views/todoTab';
import userData from '../models/userData';
import storageHelpers from '../models/storageHelpers';

const todoTabController = () => {

    const submitTaskForm = (key) => {
        let name = document.getElementById('name-input').value;
        let content = document.getElementById('content-input').value;
        let obj = userData.createTaskObj(name, content, null, null);
        if (userData.validateTaskInput(obj)) {
           storageHelpers.addNewTaskToProject(key, obj);
            return false;
        } else {
            console.log('Data Submission returned FALSE');
        }

    };

    const allProjects = () => {
        Object.keys(localStorage).forEach((key) => {
            if (document.getElementById(`project-${key}`)) {
                document.getElementById(`project-${key}`).remove();
                console.log(key);
            }
            todoTab.renderProject(key).addEventListener('click', () => {
                forms.newTaskForm(key).addEventListener('click', () => submitTaskForm(key));
            });

            JSON.parse(localStorage.getItem(key)).forEach((array) => {
                todoTab.renderProject(key, JSON.parse(array));
            });
        });
    }

    const newProjectForm = () => {
        if (! document.getElementById('project-form')) {
            forms.newProjectForm().addEventListener('click', () => {
                let formVal = document.getElementById('project-name').value;
                if  (userData.validateProjectInput(formVal)) {
                        storageHelpers.createNewProject(formVal);
                        document.getElementById('project-form').remove();
                }
            });
        } else {
            alert('Form Already Displayed');
        }
    }

    todoTab.newProjectBtn().addEventListener('click', newProjectForm);
    allProjects();

    return { allProjects, newProjectForm }
};

export default todoTabController ;
